---
# pre-checks
- name: Perform pre-checks
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/main.yml
  vars:
    minimal_ansible_version: 2.11.0
    minimal_dle_version: 3.4.0
  tasks:
    - name: Checking ansible version
      fail:
        msg: "Ansible version must be {{ minimal_ansible_version }} or higher"
      when: ansible_version.full is version(minimal_ansible_version, '<')

    - name: Checking DLE version
      fail:
        msg: "DLE version must be {{ minimal_dle_version }} or higher"
      when: dle_version | regex_replace('^v', '') | regex_replace('-rc.+$', '') is version(minimal_dle_version, '<')

    - name: Confirm that necessary variables are set
      debug:
        msg:
          - "Some required variables have empty values."
          - "Specify values for variables: 'dle_platform_project_name', 'dle_platform_org_key'."
          - "For questions, contact Postgres.ai: https://postgres.ai/contact."
      failed_when: dle_platform_project_name | length < 1 or dle_platform_org_key | length < 1
      when: dle_platform_project_name | length < 1 or dle_platform_org_key | length < 1
  tags: always

# Create a virtual machine for DLE (if provision != 'none')
- import_playbook: provision.yml
  when: provision | lower != 'none'
  tags: aws, gcp, azure, digitalocean, hetzner

- name: Add host to dle_group
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/main.yml
  tasks:
    - name: Add {{ dle_host }} to dle_group
      add_host:
        name: "{{ dle_host }}"
        groups: dle_group
      changed_when: false
      when: dle_host is defined and dle_host | length > 1
      tags: always

# add the path to the temporary ssh key if it is used
- name: Set facts for dle_group
  hosts: dle_group
  gather_facts: false
  tasks:
    - name: "set_fact: ansible_ssh_private_key_file"
      set_fact:
        ansible_ssh_private_key_file: "~{{ lookup('env', 'USER') }}/.ssh/dle_key_tmp"
      tags: always
      when:
        - hostvars['localhost']['ssh_key_name'] is defined
        - hostvars['localhost']['ssh_key_name'] == 'dle_key_tmp'

- name: Deploy DLE
  hosts: dle_group
  become: true
  become_method: sudo
  gather_facts: true
  any_errors_fatal: true
  vars_files:
    - vars/main.yml
  environment: "{{ proxy_env | default({}) }}"

  pre_tasks:
    - name: Checking Linux distribution
      fail:
        msg: "{{ ansible_distribution }} is not supported"
      when: ansible_distribution not in os_valid_distributions
      tags: always

    - name: Checking version of OS Linux
      fail:
        msg: "{{ ansible_distribution_version }} of {{ ansible_distribution }} is not supported"
      when: ansible_distribution_version is version_compare(os_minimum_versions[ansible_distribution], '<')
      tags: always

    - name: Include OS-specific variables
      include_vars: "vars/{{ ansible_os_family }}.yml"
      tags: always

    - name: Update apt cache
      apt:
        update_cache: true
        cache_valid_time: 3600
      register: apt_status
      until: apt_status is success
      delay: 10
      retries: 3
      when: ansible_os_family == "Debian"

    - name: Make sure the gnupg and apt-transport-https packages are present
      apt:
        pkg:
          - gnupg
          - apt-transport-https
        state: present
      register: apt_status
      until: apt_status is success
      delay: 10
      retries: 3
      when: ansible_os_family == "Debian"

  roles:
    # Prepare system
    - role: authorized-keys
    - role: add-repository
    - role: packages
    - role: zpool

    # Configure and start DLE
    - role: dle
    - role: cli

    # Proxy server
    - role: proxy

    # Monitoring
    - role: netdata

    # finish (connection info)
    - role: deploy-finish

...
