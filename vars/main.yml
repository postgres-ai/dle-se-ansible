---
# Server
provision: none  # or 'aws', 'gcp', 'azure', 'digitalocean', 'hetzner' to create a virtual machine for DLE

# System
username: "root"  # system user, owner of configuration files

# ZFS pool
zpool_disk: ""  # specify an empty disk for the ZFS pool (e.g.: /dev/sdb). If not specified, an attempt will be made to automatically detect an empty volume.
zpool_name: "dblab_pool"
zpool_mount_dir: "/var/lib/dblab"
zpool_datasets_number: 2  # number of datasets for the ZFS pool. When the DLE is deployed, you can increase the number of datasets (if necessary).

# DLE
dle_verification_token: "some-secret-token"
dle_base_path: "/root/.dblab"
dle_config_path: "{{ dle_base_path }}/engine/configs"
dle_meta_path: "{{ dle_base_path }}/engine/meta"
dle_logs_path: "{{ dle_base_path }}/engine/logs"
dle_dump_location: "{{ zpool_mount_dir }}/{{ zpool_name }}/dataset_1/dump"  # Use a dataset directory for dumping data
dle_container_host: 127.0.0.1
dle_container_name: dblab_server
dle_port: 2345
dle_version: 3.4.0-rc.4
dle_image: "postgresai/dblab-server:{{ dle_version | replace('v', '') }}"
dle_ui_version: "v{{ dle_version | replace('v', '') }}"
dle_ui_image: "postgresai/ce-ui:{{ dle_ui_version }}"
dle_ui_port: 2346
dle_platform_project_name: ""  # Project name
dle_platform_org_key: ""  # Organization key
dle_computing_infrastructure: "do"

# CLI
cli_install: true
cli_version: latest
cli_environment_id: dblab

# Monitoring

# Netdata - https://github.com/netdata/netdata
netdata_install: true
netdata_version: 1.37.1
netdata_port: 19999

# Proxy
proxy_install: false # Set "true" to install Envoy proxy and issue Let's Encrypt certificate
proxy_dle_public_port: 446
certbot_install_method: snap
certbot_create_if_missing: true
certbot_create_method: standalone
certbot_auto_renew: true
certbot_auto_renew_user: "{{ username | default(lookup('env', 'USER')) }}"
certbot_auto_renew_hour: "3"
certbot_auto_renew_minute: "30"
certbot_admin_email: "" # Email to issue certificate, for example, admin@example.com
certbot_domain: "" # Domain to issue certificate, for example, example.com
certbot_certs:
  - email: "{{ certbot_admin_email }}"
    domains:
     - "{{ certbot_domain }}"
...
