---

- block:
    - name: Restart DBLab server container
      community.docker.docker_container:
        name: "{{ dblab_engine_container_name }}"
        image: "{{ dblab_engine_image }}"
        state: started
        restart: true
        privileged: true
        restart_policy: unless-stopped
        container_default_behavior: "compatibility"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /var/lib/dblab:/var/lib/dblab/:rshared
          - "{{ dblab_engine_config_path }}:/home/dblab/configs"
          - "{{ dblab_engine_meta_path }}:/home/dblab/meta"
          - "{{ dblab_engine_logs_path }}:/home/dblab/logs"
        ports:
          - "{{ dblab_engine_container_host }}:{{ dblab_engine_port }}:2345"
        env:
          DOCKER_API_VERSION: "1.39"
          DLE_COMPUTING_INFRASTRUCTURE: "{{ dblab_engine_computing_infrastructure }}"

    - name: Wait for DBLab Engine API port to be available
      ansible.builtin.wait_for:
        port: "{{ dblab_engine_port }}"
        host: "localhost"
        state: started
        timeout: 120
        delay: 10
      ignore_errors: false

    - name: Ensure DBLab Engine API is healthy
      ansible.builtin.uri:
        url: "http://localhost:{{ dblab_engine_port }}/healthz"
      register: _result
      until: _result.status == 200
      retries: 10
      delay: 10

    - name: Ensure DBLab Engine UI is available
      ansible.builtin.wait_for:
        port: "{{ dblab_engine_ui_port }}"
        host: "localhost"
        state: started
        timeout: 120
        delay: 10
      ignore_errors: false

...
