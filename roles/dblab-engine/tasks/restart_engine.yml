---

- block:
    - name: Restart DBLab server container
      community.docker.docker_container:
        name: "{{ dblab_engine_container_name }}"
        image: "{{ dblab_engine_image }}"
        state: started
        restart: true
        privileged: true
        restart_policy: unless-stopped
        container_default_behavior: "compatibility"
        volumes: "{{ docker_container_volumes }}"
        ports:
          - "{{ dblab_engine_container_host }}:{{ dblab_engine_port }}:2345"
        env:
          DOCKER_API_VERSION: "1.39"
          DLE_COMPUTING_INFRASTRUCTURE: "{{ dblab_engine_computing_infrastructure }}"
      vars:
        docker_container_volumes: "{{ dblab_engine_container_default_volumes + dblab_engine_container_additional_volumes }}"

    - name: Wait for DBLab Engine API port to be available
      ansible.builtin.wait_for:
        port: "{{ dblab_engine_port }}"
        host: "localhost"
        state: started
        timeout: "{{ dblab_engine_start_timeout | default(300) }}"
        delay: 10
      ignore_errors: false

    - name: Ensure DBLab Engine API is healthy
      ansible.builtin.uri:
        url: "http://localhost:{{ dblab_engine_port }}/healthz"
      register: _result
      until: _result.status == 200
      retries: "{{ (dblab_engine_start_timeout | default(300)) // 10 }}"
      delay: 10

    - name: Ensure DBLab Engine UI is available
      ansible.builtin.wait_for:
        port: "{{ dblab_engine_ui_port }}"
        host: "localhost"
        state: started
        timeout: "{{ dblab_engine_start_timeout | default(300) }}"
        delay: 10
      ignore_errors: false

...
