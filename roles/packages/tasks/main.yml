---
# Debian
- block:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600
      register: apt_status
      until: apt_status is success
      delay: 10
      retries: 3

    - name: Install system packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop: "{{ system_packages }}"
      register: apt_status
      until: apt_status is success
      delay: 10
      retries: 3

    - name: Install Docker packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        allow_downgrade: true
      loop: "{{ docker_packages }}"
      register: apt_status
      until: apt_status is success
      delay: 10
      retries: 3
  environment: "{{ proxy_env | default({}) }}"
  when: ansible_os_family == "Debian"
  tags: install_packages

# TODO: Remove this task once pip install is added in 'ansible-role-certbot'
# See: https://github.com/geerlingguy/ansible-role-certbot/pull/189
- block:
    - name: "Install Certbot {{ certbot_install_version }} using pip"
      ansible.builtin.pip:
        name: "certbot=={{ certbot_install_version }}"
        executable: pip3
        extra_args: "--trusted-host=pypi.python.org --trusted-host=pypi.org --trusted-host=files.pythonhosted.org"
        umask: "0022"
      environment:
        PIP_BREAK_SYSTEM_PACKAGES: "1"

    - name: Set certbot_script variable
      ansible.builtin.set_fact:
        certbot_script: "/usr/local/bin/certbot"
  when:
    - proxy_install | bool
    - certbot_install_method == 'pip'
  tags: proxy

...
