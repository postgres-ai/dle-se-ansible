#jinja2: trim_blocks:True,lstrip_blocks:True
---
admin:
  access_log_path: /dev/null
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8000

static_resources:
  clusters:
{% for i in range(dblab_engine_clone_port_pool.from, dblab_engine_clone_port_pool.to + 1) %}
  - name: dblab_clone_{{ i }}
    connect_timeout: 1s
    type: STRICT_DNS
    load_assignment:
      cluster_name: dblab_clone_{{ i }}
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 0.0.0.0
                port_value: {{ i }}
{% endfor %}
  - name: dblab-engine-ui-http
    type: STRICT_DNS
    connect_timeout: 1s
    load_assignment:
      cluster_name: dblab-engine-ui-http
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 0.0.0.0
                port_value: 2346
  - name: joe-api-http
    type: STRICT_DNS
    connect_timeout: 1s
    load_assignment:
      cluster_name: joe-api-http
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 0.0.0.0
                port_value: 2400
  - name: ciobserver-api-http
    type: STRICT_DNS
    connect_timeout: 1s
    load_assignment:
      cluster_name: ciobserver-api-http
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 0.0.0.0
                port_value: 2500
  listeners:
{% for i in range(dblab_engine_clone_port_pool.from, dblab_engine_clone_port_pool.to + 1) %}
  - name: dblab_clone_{{ i + 3000 }}_listener
    address:
      socket_address:
        address: 0.0.0.0
        port_value: {{ i + 3000 }}
    filter_chains:
    - filters:
      - name: envoy.filters.network.postgres_proxy
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.postgres_proxy.v3alpha.PostgresProxy
          stat_prefix: postgres
          enable_sql_parsing: false
          terminate_ssl: true
      - name: envoy.tcp_proxy
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: tcp_postgres
          cluster: dblab_clone_{{ i }}
          idle_timeout: 1000s
      transport_socket:
        name: "starttls"
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.starttls.v3.StartTlsConfig
          tls_socket_config:
            common_tls_context:
              tls_certificates:
                certificate_chain:
                  filename: "/etc/envoy/certs/fullchain1.pem"
                private_key:
                  filename: "/etc/envoy/certs/privkey1.pem"
{% endfor %}
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: {{ proxy_dblab_engine_public_port }}
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: dblab
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: dblab-engine-ui-http
          http_filters:
          - name: envoy.filters.http.router
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
              certificate_chain:
                filename: "/etc/envoy/certs/fullchain1.pem"
              private_key:
                filename: "/etc/envoy/certs/privkey1.pem"
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 444
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: joe
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: joe-api-http
          http_filters:
          - name: envoy.filters.http.router
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
              certificate_chain:
                filename: "/etc/envoy/certs/fullchain1.pem"
              private_key:
                filename: "/etc/envoy/certs/privkey1.pem"
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 445
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: ci_observer
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: ciobserver-api-http
                  timeout: "0s"
          http_filters:
          - name: envoy.filters.http.router
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
              certificate_chain:
                filename: "/etc/envoy/certs/fullchain1.pem"
              private_key:
                filename: "/etc/envoy/certs/privkey1.pem"
