---
- block:
  - name: Create configuration and logs directories
    file:
      dest: "{{ dir_item }}"
      state: directory
    loop:
      - "{{ dle_config_path }}"
      - "{{ dle_meta_path }}"
      - "{{ dle_logs_path }}"
      - "{{ dle_dump_location }}"
    loop_control:
      loop_var: dir_item

  - name: Download logical DLE config template
    get_url:
      url: "https://gitlab.com/postgres-ai/database-lab/-/raw/{{ dle_version }}/engine/configs/config.example.logical_generic.yml"
      dest: "{{ dle_config_path }}/server.yml"
      timeout: 60

  - name: Replace config with yq
    shell: yq e -i '.embeddedUI.host="" |
      .embeddedUI.port={{ dle_ui_port }}|
      .embeddedUI.dockerImage="postgresai/ce-ui:{{ dle_ui_docker_image_version }}"|
      .server.verificationToken="{{ dle_verification_token }}" |
      .global.debug=true |
      .poolManager.mountDir="{{ zpool_mount_dir }}/{{ zpool_name }}" |
      .retrieval.spec.logicalDump.options.dumpLocation="{{ dle_dump_location }}" |
      .retrieval.spec.logicalRestore.options.forceInit=true |
      .retrieval.spec.logicalRestore.options.dumpLocation="{{ dle_dump_location }}"' {{ dle_config_path }}/server.yml

  - name: Create pending.retrieval
    file:
      path: "{{ dle_meta_path }}/pending.retrieval"
      state: touch
      owner: "{{ username }}"
      group: "{{ username }}"
      mode: u=rw,g=rw,o=rw

- block:
    - name: Start DLE service
      docker_container:
        name: dblab_server
        image: "postgresai/dblab-server:{{ dle_version[1:] }}"
        state: started
        privileged: true
        container_default_behavior: "compatibility"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /var/lib/dblab:/var/lib/dblab/:rshared
          - "{{ dle_config_path }}:/home/dblab/configs"
          - "{{ dle_meta_path }}:/home/dblab/meta"
          - "{{ dle_logs_path }}:/home/dblab/logs"
          - "{{ dle_dump_location }}:{{ dle_dump_location }}"
          - /sys/kernel/debug:/sys/kernel/debug:rw
          - /lib/modules:/lib/modules:ro
          - /proc:/host_proc:ro
        ports:
          - "{{ dle_container_host }}:{{ dle_port }}:{{ dle_port }}"
        env:
          DOCKER_API_VERSION: "1.39"
          DLE_COMPUTING_INFRASTRUCTURE: "{{ dle_computing_infrastructure }}"

    - name: Wait for port 2345 to become open on the host
      wait_for:
        port: "{{ dle_port }}"
        host: "localhost"
        state: started
        timeout: 120
        delay: 10
      ignore_errors: false

    - name: Check that the DLE is healthy
      uri:
        url: "http://localhost:{{ dle_port }}/healthz"
      register: _result
      until: _result.status == 200
      retries: 10
      delay: 10

    - name: Check DLE UI is running
      wait_for:
        port: "{{ dle_ui_port }}"
        host: "localhost"
        state: started
        timeout: 120
        delay: 10
      ignore_errors: false

...